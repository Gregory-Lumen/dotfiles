# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-s
bind-key C-s last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi

# vi-style controls for copy mode
setw -g mode-keys vi

set -g status-keys vi

# list all paste buffers (default key is '#')
bind-key b list-buffers

# choose buffer to paste interactively (default key was '=')
bind-key p choose-buffer

unbind [
bind y copy-mode
unbind p
# bind p paste-buffer
# bind -T copy-mode-vi v send-keys -x begin-selection
# bind -T copy-mode-vi y send-keys -x copy-selection
# bind -T copy-mode-vi Escape send-keys -x cancel

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# hjkl pane traversal
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# quick resize
bind-key -r  M-k resize-pane -U 5
bind-key -r  M-j resize-pane -D 5
bind-key -r  M-h resize-pane -L 5
bind-key -r  M-l resize-pane -R 5
# bind-key -r  C-k resize-pane -U
# bind-key -r  C-j resize-pane -D
# bind-key -r  C-h resize-pane -L
# bind-key -r  C-l resize-pane -R

# pane movement
bind-key g command-prompt -p "grab pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# swap panes
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

# reload config
bind-key R source-file ~/.tmux.conf \\; display-message "Config reloaded..."

bind-key C-q run "tmux source-file ~/.tmux.conf; stty -ixon"

set -g mouse on
set -g history-limit 30000

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'jimeh/tmux-themepack'


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'

# Begin Skinning

#####################
### DESIGN CHANGES ###
######################

#set-option -g allow-rename off
set-window-option -g automatic-rename off

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"

set -g @theme-status-justify left
set -g @themepack 'powerline/block/gray'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
